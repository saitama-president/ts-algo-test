import { square_walk } from "./functions";

function fourier( input : number[] ){

  var N:number = input.length;
  var re:number=0;
  var im:number=0;

  square_walk(input,
      y=>{
        re=0;
        im=0;
      },
      (x,y)=>{
        re +=   input[x] * Math.cos( ( 2 * Math.PI * x * y ) / N );
        im += - input[x] * Math.sin( ( 2 * Math.PI * x * y ) / N );
      },
      y=>{
        console.log(`${y} : ${re.toFixed(2)} : ${im.toFixed(2)}`);
      }
      );
}

var source=[
  -1.000000,
-0.900000,
-0.800000,
-0.700000,
-0.600000,
-0.500000,
-0.400000,
-0.300000,
-0.200000,
-0.100000,
-0.000000,
0.100000,
0.200000,
0.300000,
0.400000,
0.500000,
0.600000,
0.700000,
0.800000,
0.900000,
1.000000,
-1.000000,
-0.900000,
-0.800000,
-0.700000,
-0.600000,
-0.500000,
-0.400000,
-0.300000,
-0.200000,
-0.100000,
-0.000000,
0.100000,
0.200000,
0.300000,
0.400000,
0.500000,
0.600000,
0.700000,
0.800000,
0.900000,
1.000000,
-1.000000,
-0.900000,
-0.800000,
-0.700000,
-0.600000,
-0.500000,
-0.400000,
-0.300000,
-0.200000,
-0.100000,
-0.000000,
0.100000,
0.200000,
0.300000,
0.400000,
0.500000,
0.600000,
0.700000,
0.800000,
0.900000,
1.000000,
-1.000000,
-0.900000,
-0.800000,
-0.700000,
-0.600000,
-0.500000,
-0.400000,
-0.300000,
-0.200000,
-0.100000,
-0.000000,
0.100000,
0.200000,
0.300000,
0.400000,
0.500000,
0.600000,
0.700000,
0.800000,
0.900000,
1.000000,
-1.000000,
-0.900000,
-0.800000,
-0.700000,
-0.600000,
-0.500000,
-0.400000,
-0.300000,
-0.200000,
-0.100000,
-0.000000,
0.100000,
0.200000,
0.300000,
0.400000,
0.500000,
0.600000,
0.700000,
0.800000,
0.900000,
1.000000,
];

fourier(source);
